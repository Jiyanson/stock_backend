version: "3.9"

services:
  www:
    build:
      dockerfile: ./dockerfile.www
    volumes:
      - "./stock_backend:/app/stock_backend"
      - "./db:/app/db"
      # Remove alembic.ini mount to avoid permission issues
    ports:
      - "80:80"
    environment:
      IS_DEV: "true"
      RELOAD: "true"
      DATABASE_URL: postgresql://main:main12345@db/main
      CELERY_BROKER: redis://redis:6379/0
      PYTHONPATH: /app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  celery-scheduler:
    build:
      dockerfile: ./dockerfile.celery
    volumes:
      - "./:/app"
    working_dir: /app
    command: celery -A stock_backend.celery worker --loglevel=info --beat
    environment:
      IS_DEV: "true"
      DATABASE_URL: postgresql://main:main12345@db/main
      CELERY_BROKER: redis://redis:6379/0
      PYTHONPATH: /app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  celery-node:
    build:
      dockerfile: ./dockerfile.celery
    volumes:
      - "./:/app"
    working_dir: /app
    command: celery -A stock_backend.celery worker --loglevel=info
    environment:
      IS_DEV: "true"
      DATABASE_URL: postgresql://main:main12345@db/main
      CELERY_BROKER: redis://redis:6379/0
      PYTHONPATH: /app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: main
      POSTGRES_PASSWORD: main12345
      POSTGRES_DB: main
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U main -d main"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres_data: